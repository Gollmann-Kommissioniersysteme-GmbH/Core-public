name: Wiki Change to Discussion

on:
  gollum  # Triggers when the wiki is updated

jobs:
  post-discussion:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Wiki Repo
        run: |
          git clone --depth=2 https://github.com/${{ github.repository }}.wiki.git wiki
          cd wiki
          LAST_COMMIT_SHA=$(git rev-parse HEAD)
          PREV_COMMIT_SHA=$(git rev-parse HEAD~1)

          echo "Last Commit: $LAST_COMMIT_SHA"
          echo "Previous Commit: $PREV_COMMIT_SHA"

          # Get changed files
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT_SHA $LAST_COMMIT_SHA)

          # Extract exact page URLs
          WIKI_URL="https://github.com/${{ github.repository }}/wiki"
          DIFF_URL="$WIKI_URL/_compare/$PREV_COMMIT_SHA...$LAST_COMMIT_SHA"
          PAGE_LINKS=""

          for FILE in $CHANGED_FILES; do
            PAGE_NAME=$(basename "$FILE" .md)   # Remove .md extension
            PAGE_URL="$WIKI_URL/${PAGE_NAME// /-}"  # Replace spaces with '-'
            PAGE_LINKS+="[üìÑ $PAGE_NAME]($PAGE_URL)\n"
          done

          # Store results for later steps
          echo "DIFF_URL=$DIFF_URL" >> $GITHUB_ENV

          echo "PAGE_LINKS<<EOF" >> $GITHUB_ENV
          echo -e "$PAGE_LINKS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "CHANGES<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=format:"%s%n%n%b" $LAST_COMMIT_SHA >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "FILE_CHANGES<<EOF" >> $GITHUB_ENV
          git diff --name-status $PREV_COMMIT_SHA $LAST_COMMIT_SHA >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Discussion
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          OWNER="${{ github.repository_owner }}"
          REPO_NAME="$(basename ${{ github.repository }})"
          ACTOR="${{ github.actor }}"
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          # ‚úÖ Fetch Correct Repository Global ID
          REPO_ID=$(gh api graphql -f query='
            query {
              repository(owner: "'"$OWNER"'", name: "'"$REPO_NAME"'") {
                id
              }
            }' | jq -r '.data.repository.id')

          if [[ -z "$REPO_ID" || "$REPO_ID" == "null" ]]; then
            echo "Error: Failed to retrieve repository global ID!"
            exit 1
          fi

          # ‚úÖ Get Discussion Category ID (Default: General)
          CATEGORY_ID=$(gh api graphql -f query='
            query {
              repository(owner: "'"$OWNER"'", name: "'"$REPO_NAME"'") {
                discussionCategories(first: 10) {
                  nodes { id, name }
                }
              }
            }' | jq -r '.data.repository.discussionCategories.nodes[] | select(.name=="General") | .id')

          if [[ -z "$CATEGORY_ID" || "$CATEGORY_ID" == "null" ]]; then
            echo "Error: No valid discussion category found!"
            exit 1
          fi

          # ‚úÖ Create Discussion with Wiki Diff Link
          DISCUSSION_TITLE="Wiki Updated by $ACTOR"
          DISCUSSION_BODY="üìñ **Wiki Page Updated**  
          - **User:** $ACTOR  
          - **Time:** $TIMESTAMP  

          ### üîó Updated Pages:  
          $PAGE_LINKS

          ### üîÑ Changes:  
          \`\`\`
          $CHANGES
          \`\`\`

          ### üìÑ Files Changed:  
          \`\`\`
          $FILE_CHANGES
          \`\`\`

          üîç **[View Full Diff]($DIFF_URL)**

          _This discussion was automatically created by GitHub Actions._"

          DISCUSSION_URL=$(gh api graphql -f query='
            mutation($repositoryId: ID!, $categoryId: ID!, $title: String!, $body: String!) {
              createDiscussion(input: {repositoryId: $repositoryId, categoryId: $categoryId, title: $title, body: $body}) {
                discussion {
                  url
                }
              }
            }' -F repositoryId="$REPO_ID" -F categoryId="$CATEGORY_ID" -F title="$DISCUSSION_TITLE" -F body="$DISCUSSION_BODY" | jq -r '.data.createDiscussion.discussion.url')

          if [[ -z "$DISCUSSION_URL" || "$DISCUSSION_URL" == "null" ]]; then
            echo "Error: Failed to create discussion!"
            exit 1
          fi

          echo "Discussion created: $DISCUSSION_URL"
